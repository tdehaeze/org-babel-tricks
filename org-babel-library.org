#+TITLE: Custom Library of Babel


* Tikz
** =pdf2svg= - Export to pdf/png/svg at the same time

#+name: pdf2svg
#+begin_src sh :var file="" :var ext="svg" :results output
  _mydir="$(pwd)";
  # Remove file:
  file=$(echo "$file" | cut -f 2- -d ':');
  _figdir=$(dirname "$file");
  cd $_figdir;
  filename=$(echo "${file##*/}" | cut -f 1 -d '.');
  pdftocairo -png -transp -singlefile "$filename.pdf";
  pdftocairo -svg "$filename.pdf";
  cd "$_mydir";
  echo "[[file:$_figdir/$filename.$ext]]"
#+end_src

* Matlab
** =addhdr= - Add hline to tables

#+name: addhdr
#+begin_src emacs-lisp :var tbl=""
(cons (car tbl) (cons 'hline (cdr tbl)))
#+end_src

** =plt-postamble= Plot figures
Some variable can be set by block that expands this org source code block:
- "path": specify the path of the figure including the file extension. Can be relative or absolute. If not provided, it will create the figure in the =/tmp= folder
- "fig_size": can specify the size of the figure. If not specify, default will be applied.

#+NAME: plt-postamble
#+BEGIN_SRC matlab :results file :exports code
  if ~exist('filepath')
    symbols = ['a':'z' 'A':'Z' '0':'9'];
    random_string = symbols(randi(numel(symbols),[1 5]));
    filepath = ['/tmp/matlab-fig-', random_string,'.png'];
  end

  if exist('figsize')
    exportFig(filepath, figsize);
  else
    exportFig(filepath);
  end

  ans = filepath;
  clear('filepath', 'figsize');
#+END_SRC
