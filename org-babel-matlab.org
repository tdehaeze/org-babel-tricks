#+TITLE: Literate programming with Org Babel and Matlab
#+PROPERTY: header-args:matlab+ :exports both :eval no-export
#+PROPERTY: header-args:matlab+ :session *MATLABTEST*

* Plot Figures
#+begin_src matlab :tangle test.m :exports code :results none
  x = linspace(0, 10, 100);
  y = x.*sin(x);

  figure;
  plot(x, y);
#+end_src

#+HEADER: :tangle no :exports results :results raw :noweb yes
#+begin_src matlab :var filepath="Figures/comp_filter_1st_order.pdf" :var figsize="wide-normal" :post pdf2svg(file=*this*, ext="png")
  <<plt-matlab>>
#+end_src


#+RESULTS:
[[file:Figures/comp_filter_1st_order.png]]

* Display result as Org Table
The function =data2orgtable= is available on [[https://github.com/tdehaeze/Org-Mode-Matlab][github]].

#+begin_src matlab :results silent :exports code
  x = 1:3;
  y = sqrt(x);
  data = [x;y];
#+end_src

#+begin_src matlab :results value table :exports both
  data2orgtable(data, {}, {}, ' %.1f ');
#+end_src

#+RESULTS:
| 1.0 | 2.0 | 3.0 |
| 1.0 | 1.4 | 1.7 |

#+begin_src matlab :results value table :exports both
  data2orgtable(data, {'x', 'y'}, {}, ' %.1f ');
#+end_src

#+RESULTS:
| x | 1.0 | 2.0 | 3.0 |
| y | 1.0 | 1.4 | 1.7 |

#+begin_src matlab :results value table :exports both
  data2orgtable(data, {'x', 'y'}, {'a', 'b', 'c'}, ' %.1f ');
#+end_src

#+RESULTS:
|   |   a |   b |   c |
| x | 1.0 | 2.0 | 3.0 |
| y | 1.0 | 1.4 | 1.7 |

* Add hline to tables
#+begin_src matlab :results value table :post addhdr(*this*)
  ans = sprintf('x \t y \n 1 \t 2');
#+end_src

#+RESULTS:
| x | y |
|---+---|
| 1 | 2 |

* Gif animation
#+begin_src matlab :results value file
  h = figure;
  set(h, 'visible', 'off');
  set(h,'pos',[-10, -10, 300, 300]);
  axis tight manual % this ensures that getframe() returns a consistent size
  filename = 'Figures/testAnimated.gif';
  for n = 1:0.5:5
      % Draw plot for y = x.^n
      x = 0:0.01:1;
      y = x.^n;
      plot(x,y);
      drawnow;
        % Capture the plot as an image
        frame = getframe(h);
        im = frame2im(frame);
        [imind,cm] = rgb2ind(im,256);
        % Write to the GIF File
        if n == 1
            imwrite(imind,cm,filename,'gif', 'Loopcount',inf);
        else
            imwrite(imind,cm,filename,'gif','WriteMode','append');
        end
  end
  set(h, 'visible', 'on');
  ans = filename;
#+end_src

#+RESULTS:
[[file:Figures/testAnimated.gif]]
